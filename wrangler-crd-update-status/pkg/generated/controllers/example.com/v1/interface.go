// Code generated by main. DO NOT EDIT.

package v1

import (
	"github.com/rancher/lasso/pkg/controller"
	"github.com/rancher/wrangler/v3/pkg/generic"
	"github.com/rancher/wrangler/v3/pkg/schemes"
	v1 "github.com/tomleb/lasso-controller-notes/pkg/apis/example.com/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"
)

func init() {
	schemes.Register(v1.AddToScheme)
}

type Interface interface {
	Bar() BarController
	Foo() FooController
}

func New(controllerFactory controller.SharedControllerFactory) Interface {
	return &version{
		controllerFactory: controllerFactory,
	}
}

type version struct {
	controllerFactory controller.SharedControllerFactory
}

func (v *version) Bar() BarController {
	return generic.NewController[*v1.Bar, *v1.BarList](schema.GroupVersionKind{Group: "example.com", Version: "v1", Kind: "Bar"}, "bars", true, v.controllerFactory)
}

func (v *version) Foo() FooController {
	return generic.NewController[*v1.Foo, *v1.FooList](schema.GroupVersionKind{Group: "example.com", Version: "v1", Kind: "Foo"}, "foos", true, v.controllerFactory)
}
